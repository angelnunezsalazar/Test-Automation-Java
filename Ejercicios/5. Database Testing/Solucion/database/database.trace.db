04-21 10:09:23 database: opening C:\Users\Snahider\workspace\DBTesting-Solucion\database\database (build 154)
04-21 10:09:46 database: opening C:\Users\Snahider\workspace\DBTesting-Solucion\database\database (build 154)
04-21 10:09:47 database: opened C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-21 10:09:47 database: connecting session #2 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-21 10:09:47 jdbc[2]: 
/*SQL */SET TRACE_LEVEL_FILE 2;
04-21 10:09:47 jdbc[2]: 
/**/Connection conn0 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-21 10:09:47 jdbc[2]: 
/*SQL */ROLLBACK;
04-21 10:09:47 database: disconnecting session #2
04-21 10:09:47 database: closing C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-21 10:09:47 database: closed
04-21 10:09:47 database: disconnected session #2
04-21 10:09:47 database: opening C:\Users\Snahider\workspace\DBTesting-Solucion\database\database (build 154)
04-21 10:09:47 database: opened C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-21 10:09:47 database: connecting session #2 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-21 10:09:47 jdbc[2]: 
/*SQL */SET TRACE_LEVEL_FILE 2;
04-21 10:09:47 jdbc[2]: 
/**/Connection conn2 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-21 10:09:47 database: connecting session #3 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-21 10:09:47 jdbc[3]: 
/*SQL */SET TRACE_LEVEL_FILE 2;
04-21 10:09:47 jdbc[3]: 
/**/Connection conn3 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-21 10:09:47 jdbc[3]: 
/*SQL l:53 #:1 t:4*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Pacheco', 2: DATE '2012-12-29'};
04-21 10:09:47 jdbc[3]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-21 10:09:47 jdbc[2]: 
/*SQL */ROLLBACK;
04-21 10:09:47 jdbc[2]: 
/*SQL #:1*/CALL READONLY();
04-21 10:09:47 database: closing C:\Users\Snahider\workspace\DBTesting-Solucion\database\database from shutdown hook
04-21 10:09:47 database: disconnecting session #2
04-21 10:09:47 database: disconnected session #2
04-21 10:09:47 database: disconnecting session #3
04-21 10:09:47 database: disconnected session #3
04-21 10:09:47 database: closing C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-21 10:09:48 database: closed
04-25 07:29:16 database: opening C:\Users\Snahider\workspace\DBTesting-Solucion\database\database (build 154)
04-25 07:29:16 database: opened C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:16 database: connecting session #2 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:16 jdbc[2]: 
/*SQL */SET TRACE_LEVEL_FILE 2;
04-25 07:29:16 jdbc[2]: 
/**/Connection conn0 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-25 07:29:16 jdbc[2]: 
/*SQL */ROLLBACK;
04-25 07:29:16 database: disconnecting session #2
04-25 07:29:16 database: closing C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:19 database: closed
04-25 07:29:19 database: disconnected session #2
04-25 07:29:19 database: opening C:\Users\Snahider\workspace\DBTesting-Solucion\database\database (build 154)
04-25 07:29:19 database: opened C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:19 database: connecting session #2 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:19 jdbc[2]: 
/*SQL */SET TRACE_LEVEL_FILE 2;
04-25 07:29:19 jdbc[2]: 
/**/Connection conn2 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-25 07:29:19 jdbc[2]: 
/*SQL l:53 #:1 t:3*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Carranza', 2: DATE '2012-12-29'};
04-25 07:29:19 jdbc[2]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-25 07:29:19 jdbc[2]: 
/*SQL #:1*/CALL DATABASE();
04-25 07:29:19 jdbc[2]: 
/*SQL l:32 #:1 t:2*/delete from Employees where Id=? {1: 21};
04-25 07:29:19 jdbc[2]: 
/*SQL l:55*/select Id, LastName, HireDate from Employees where Id=? {1: 21};
04-25 07:29:19 jdbc[2]: 
/*SQL */ROLLBACK;
04-25 07:29:19 jdbc[2]: 
/*SQL #:1*/CALL READONLY();
04-25 07:29:19 jdbc[2]: 
/*SQL l:53 #:1*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Pacheco', 2: DATE '2012-12-28'};
04-25 07:29:19 jdbc[2]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-25 07:29:19 jdbc[2]: 
/*SQL l:53 #:1*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Carranza', 2: DATE '2012-12-29'};
04-25 07:29:19 jdbc[2]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-25 07:29:19 jdbc[2]: 
/*SQL #:1*/select Id, LastName, HireDate from Employees where LastName='Pacheco';
04-25 07:29:19 jdbc[2]: 
/*SQL */ROLLBACK;
04-25 07:29:19 jdbc[2]: 
/*SQL #:1*/CALL READONLY();
04-25 07:29:19 jdbc[2]: 
/*SQL l:53 #:1 t:1*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Pacheco', 2: DATE '2012-12-28'};
04-25 07:29:19 jdbc[2]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-25 07:29:19 jdbc[2]: 
/*SQL l:53 #:1*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Carranza', 2: DATE '2012-12-29'};
04-25 07:29:19 jdbc[2]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-25 07:29:19 jdbc[2]: 
/*SQL l:53 #:1*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Rodriduez', 2: DATE '2012-12-30'};
04-25 07:29:19 jdbc[2]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-25 07:29:19 jdbc[2]: 
/*SQL #:2 t:1*/select Id, LastName, HireDate from Employees where HireDate between '2012-12-29' and '2012-12-30';
04-25 07:29:19 jdbc[2]: 
/*SQL */ROLLBACK;
04-25 07:29:19 jdbc[2]: 
/*SQL #:1*/CALL READONLY();
04-25 07:29:19 jdbc[2]: 
/*SQL l:53 #:1*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Pacheco', 2: DATE '2012-12-28'};
04-25 07:29:19 jdbc[2]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-25 07:29:19 jdbc[2]: 
/*SQL l:53 #:1*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Carranza', 2: DATE '2012-12-29'};
04-25 07:29:19 jdbc[2]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-25 07:29:19 jdbc[2]: 
/*SQL l:53 #:1*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Rodriduez', 2: DATE '2012-12-30'};
04-25 07:29:19 jdbc[2]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-25 07:29:19 jdbc[2]: 
/*SQL #:3*/select Id, LastName, HireDate from Employees;
04-25 07:29:19 jdbc[2]: 
/*SQL */ROLLBACK;
04-25 07:29:19 jdbc[2]: 
/*SQL #:1*/CALL READONLY();
04-25 07:29:19 jdbc[2]: 
/*SQL l:53 #:1*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Carranza', 2: DATE '2012-10-15'};
04-25 07:29:19 jdbc[2]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-25 07:29:19 jdbc[2]: 
/*SQL l:55 #:1*/select Id, LastName, HireDate from Employees where Id=? {1: 30};
04-25 07:29:19 jdbc[2]: 
/*SQL */ROLLBACK;
04-25 07:29:19 jdbc[2]: 
/*SQL #:1*/CALL READONLY();
04-25 07:29:19 database: closing C:\Users\Snahider\workspace\DBTesting-Solucion\database\database from shutdown hook
04-25 07:29:19 database: disconnecting session #2
04-25 07:29:19 database: disconnected session #2
04-25 07:29:19 database: closing C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:20 database: closed
04-25 07:29:36 database: opening C:\Users\Snahider\workspace\DBTesting-Solucion\database\database (build 154)
04-25 07:29:36 database: opened C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:36 database: connecting session #2 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:36 jdbc[2]: 
/*SQL t:1*/SET TRACE_LEVEL_FILE 2;
04-25 07:29:36 jdbc[2]: 
/**/Connection conn0 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-25 07:29:36 jdbc[2]: 
/*SQL */ROLLBACK;
04-25 07:29:36 database: disconnecting session #2
04-25 07:29:36 database: closing C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:37 database: closed
04-25 07:29:37 database: disconnected session #2
04-25 07:29:37 database: opening C:\Users\Snahider\workspace\DBTesting-Solucion\database\database (build 154)
04-25 07:29:37 database: opened C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:37 database: connecting session #2 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:37 jdbc[2]: 
/*SQL */SET TRACE_LEVEL_FILE 2;
04-25 07:29:37 jdbc[2]: 
/**/Connection conn2 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-25 07:29:37 jdbc[2]: 
/*SQL l:53 #:1 t:3*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Pacheco', 2: DATE '2012-12-28'};
04-25 07:29:37 jdbc[2]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-25 07:29:37 jdbc[2]: 
/*SQL #:1*/CALL DATABASE();
04-25 07:29:37 jdbc[2]: 
/*SQL l:53 #:1*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Carranza', 2: DATE '2012-12-29'};
04-25 07:29:37 jdbc[2]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-25 07:29:37 jdbc[2]: 
/*SQL l:53 #:1*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Rodriduez', 2: DATE '2012-12-30'};
04-25 07:29:37 jdbc[2]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-25 07:29:37 jdbc[2]: 
/*SQL #:2 t:1*/select Id, LastName, HireDate from Employees where HireDate between '2012-12-29' and '2012-12-30';
04-25 07:29:38 jdbc[2]: 
/*SQL t:1*/ROLLBACK;
04-25 07:29:38 jdbc[2]: 
/*SQL #:1*/CALL READONLY();
04-25 07:29:38 jdbc[2]: 
/*SQL l:53 #:1*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Pacheco', 2: DATE '2012-12-28'};
04-25 07:29:38 jdbc[2]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-25 07:29:38 jdbc[2]: 
/*SQL l:53 #:1*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Carranza', 2: DATE '2012-12-29'};
04-25 07:29:38 jdbc[2]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-25 07:29:38 jdbc[2]: 
/*SQL #:1*/select Id, LastName, HireDate from Employees where LastName='Pacheco';
04-25 07:29:38 jdbc[2]: 
/*SQL */ROLLBACK;
04-25 07:29:38 jdbc[2]: 
/*SQL #:1*/CALL READONLY();
04-25 07:29:38 jdbc[2]: 
/*SQL l:53 #:1*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Pacheco', 2: DATE '2012-12-28'};
04-25 07:29:38 jdbc[2]: 
/*SQL #:1 t:1*/CALL SCOPE_IDENTITY();
04-25 07:29:38 jdbc[2]: 
/*SQL l:53 #:1*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Carranza', 2: DATE '2012-12-29'};
04-25 07:29:38 jdbc[2]: 
/*SQL #:1 t:1*/CALL SCOPE_IDENTITY();
04-25 07:29:38 jdbc[2]: 
/*SQL l:53 #:1*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Rodriduez', 2: DATE '2012-12-30'};
04-25 07:29:38 jdbc[2]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-25 07:29:38 jdbc[2]: 
/*SQL #:3*/select Id, LastName, HireDate from Employees;
04-25 07:29:38 jdbc[2]: 
/*SQL t:1*/ROLLBACK;
04-25 07:29:38 jdbc[2]: 
/*SQL #:1*/CALL READONLY();
04-25 07:29:38 jdbc[2]: 
/*SQL l:53 #:1*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Carranza', 2: DATE '2012-10-15'};
04-25 07:29:38 jdbc[2]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-25 07:29:38 jdbc[2]: 
/*SQL l:55 #:1*/select Id, LastName, HireDate from Employees where Id=? {1: 39};
04-25 07:29:38 jdbc[2]: 
/*SQL */ROLLBACK;
04-25 07:29:38 jdbc[2]: 
/*SQL #:1*/CALL READONLY();
04-25 07:29:38 jdbc[2]: 
/*SQL l:53 #:1*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Carranza', 2: DATE '2012-12-29'};
04-25 07:29:38 jdbc[2]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-25 07:29:38 jdbc[2]: 
/*SQL l:32 #:1 t:2*/delete from Employees where Id=? {1: 40};
04-25 07:29:38 jdbc[2]: 
/*SQL l:55*/select Id, LastName, HireDate from Employees where Id=? {1: 40};
04-25 07:29:38 jdbc[2]: 
/*SQL */ROLLBACK;
04-25 07:29:38 jdbc[2]: 
/*SQL #:1*/CALL READONLY();
04-25 07:29:38 jdbc[2]: 
/*SQL */ROLLBACK;
04-25 07:29:38 database: disconnecting session #2
04-25 07:29:38 database: closing C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:38 database: closed
04-25 07:29:38 database: disconnected session #2
04-25 07:29:45 database: opening C:\Users\Snahider\workspace\DBTesting-Solucion\database\database (build 154)
04-25 07:29:46 database: opened C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:46 database: connecting session #2 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:46 jdbc[2]: 
/*SQL */SET TRACE_LEVEL_FILE 2;
04-25 07:29:46 jdbc[2]: 
/**/Connection conn0 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-25 07:29:46 jdbc[2]: 
/*SQL */ROLLBACK;
04-25 07:29:46 database: disconnecting session #2
04-25 07:29:46 database: closing C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:46 database: closed
04-25 07:29:46 database: disconnected session #2
04-25 07:29:46 database: opening C:\Users\Snahider\workspace\DBTesting-Solucion\database\database (build 154)
04-25 07:29:47 database: opened C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:47 database: connecting session #2 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:47 jdbc[2]: 
/*SQL */SET TRACE_LEVEL_FILE 2;
04-25 07:29:47 jdbc[2]: 
/**/Connection conn2 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-25 07:29:47 jdbc[2]: 
/*SQL l:416 #:1 t:3*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TABLE_TYPE IN(?)) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: '%', 4: 'TABLE'};
04-25 07:29:47 jdbc[2]: 
/*SQL l:404 #:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TRUE) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: 'EMPLOYEES'};
04-25 07:29:47 jdbc[2]: 
/*SQL l:940 #:3 t:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN 'NO' ELSE 'YES' END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND COLUMN_NAME LIKE ? ESCAPE '\\' ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION {1: '%', 2: '%', 3: 'EMPLOYEES', 4: '%'};
04-25 07:29:47 jdbc[2]: 
/*SQL l:320 #:1 t:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, ORDINAL_POSITION KEY_SEQ, IFNULL(CONSTRAINT_NAME, INDEX_NAME) PK_NAME FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME = ? AND PRIMARY_KEY = TRUE ORDER BY COLUMN_NAME {1: '%', 2: '%', 3: 'EMPLOYEES'};
04-25 07:29:47 jdbc[2]: 
/*SQL l:63 #:1 t:1*/insert into EMPLOYEES (ID, LASTNAME, HIREDATE) values (?, ?, ?) {1: 1, 2: 'Pacheco', 3: DATE '2012-12-28'};
04-25 07:29:47 jdbc[2]: 
/*SQL l:63 #:1*/insert into EMPLOYEES (ID, LASTNAME, HIREDATE) values (?, ?, ?) {1: 2, 2: 'Quispe', 3: DATE '2012-12-29'};
04-25 07:29:47 jdbc[2]: 
/*SQL l:63 #:1*/insert into EMPLOYEES (ID, LASTNAME, HIREDATE) values (?, ?, ?) {1: 3, 2: 'Tovar', 3: DATE '2012-12-30'};
04-25 07:29:47 jdbc[2]: 
/*SQL */COMMIT;
04-25 07:29:47 database: connecting session #3 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:47 jdbc[3]: 
/*SQL */SET TRACE_LEVEL_FILE 2;
04-25 07:29:47 jdbc[3]: 
/**/Connection conn3 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-25 07:29:47 jdbc[3]: 
/*SQL l:53 #:1 t:3*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Carranza', 2: DATE '2012-10-15'};
04-25 07:29:47 jdbc[3]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-25 07:29:47 jdbc[3]: 
/*SQL #:1*/CALL DATABASE();
04-25 07:29:47 jdbc[3]: 
/*SQL l:55 #:1*/select Id, LastName, HireDate from Employees where Id=? {1: 41};
04-25 07:29:47 jdbc[3]: 
/*SQL l:416 #:1 t:2*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TABLE_TYPE IN(?)) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: '%', 4: 'TABLE'};
04-25 07:29:47 jdbc[3]: 
/*SQL l:404 #:1 t:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TRUE) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: 'EMPLOYEES'};
04-25 07:29:47 jdbc[3]: 
/*SQL #:4 t:2*/delete from EMPLOYEES;
04-25 07:29:47 database: connecting session #4 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:47 jdbc[4]: 
/*SQL */SET TRACE_LEVEL_FILE 2;
04-25 07:29:47 jdbc[4]: 
/**/Connection conn4 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-25 07:29:47 jdbc[4]: 
/*SQL l:416 #:1 t:2*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TABLE_TYPE IN(?)) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: '%', 4: 'TABLE'};
04-25 07:29:47 jdbc[4]: 
/*SQL l:404 #:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TRUE) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: 'EMPLOYEES'};
04-25 07:29:47 jdbc[4]: 
/*SQL l:940 #:3 t:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN 'NO' ELSE 'YES' END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND COLUMN_NAME LIKE ? ESCAPE '\\' ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION {1: '%', 2: '%', 3: 'EMPLOYEES', 4: '%'};
04-25 07:29:47 jdbc[4]: 
/*SQL l:320 #:1 t:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, ORDINAL_POSITION KEY_SEQ, IFNULL(CONSTRAINT_NAME, INDEX_NAME) PK_NAME FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME = ? AND PRIMARY_KEY = TRUE ORDER BY COLUMN_NAME {1: '%', 2: '%', 3: 'EMPLOYEES'};
04-25 07:29:47 jdbc[4]: 
/*SQL l:63 #:1*/insert into EMPLOYEES (ID, LASTNAME, HIREDATE) values (?, ?, ?) {1: 1, 2: 'Pacheco', 3: DATE '2012-12-28'};
04-25 07:29:47 jdbc[4]: 
/*SQL l:63 #:1*/insert into EMPLOYEES (ID, LASTNAME, HIREDATE) values (?, ?, ?) {1: 2, 2: 'Quispe', 3: DATE '2012-12-29'};
04-25 07:29:47 jdbc[4]: 
/*SQL l:63 #:1*/insert into EMPLOYEES (ID, LASTNAME, HIREDATE) values (?, ?, ?) {1: 3, 2: 'Tovar', 3: DATE '2012-12-30'};
04-25 07:29:47 jdbc[4]: 
/*SQL */COMMIT;
04-25 07:29:47 database: connecting session #5 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:47 jdbc[5]: 
/*SQL */SET TRACE_LEVEL_FILE 2;
04-25 07:29:47 jdbc[5]: 
/**/Connection conn5 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-25 07:29:47 jdbc[5]: 
/*SQL #:1*/select Id, LastName, HireDate from Employees where LastName='Pacheco';
04-25 07:29:47 jdbc[5]: 
/*SQL #:1*/CALL DATABASE();
04-25 07:29:47 jdbc[5]: 
/*SQL l:416 #:1 t:2*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TABLE_TYPE IN(?)) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: '%', 4: 'TABLE'};
04-25 07:29:47 jdbc[5]: 
/*SQL l:404 #:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TRUE) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: 'EMPLOYEES'};
04-25 07:29:47 jdbc[5]: 
/*SQL #:3*/delete from EMPLOYEES;
04-25 07:29:47 database: connecting session #6 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:47 jdbc[6]: 
/*SQL */SET TRACE_LEVEL_FILE 2;
04-25 07:29:47 jdbc[6]: 
/**/Connection conn6 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-25 07:29:47 jdbc[6]: 
/*SQL l:416 #:1 t:2*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TABLE_TYPE IN(?)) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: '%', 4: 'TABLE'};
04-25 07:29:47 jdbc[6]: 
/*SQL l:404 #:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TRUE) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: 'EMPLOYEES'};
04-25 07:29:47 jdbc[6]: 
/*SQL l:940 #:3*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN 'NO' ELSE 'YES' END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND COLUMN_NAME LIKE ? ESCAPE '\\' ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION {1: '%', 2: '%', 3: 'EMPLOYEES', 4: '%'};
04-25 07:29:47 jdbc[6]: 
/*SQL l:320 #:1 t:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, ORDINAL_POSITION KEY_SEQ, IFNULL(CONSTRAINT_NAME, INDEX_NAME) PK_NAME FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME = ? AND PRIMARY_KEY = TRUE ORDER BY COLUMN_NAME {1: '%', 2: '%', 3: 'EMPLOYEES'};
04-25 07:29:47 jdbc[6]: 
/*SQL l:63 #:1*/insert into EMPLOYEES (ID, LASTNAME, HIREDATE) values (?, ?, ?) {1: 1, 2: 'Pacheco', 3: DATE '2012-12-28'};
04-25 07:29:47 jdbc[6]: 
/*SQL l:63 #:1*/insert into EMPLOYEES (ID, LASTNAME, HIREDATE) values (?, ?, ?) {1: 2, 2: 'Quispe', 3: DATE '2012-12-29'};
04-25 07:29:47 jdbc[6]: 
/*SQL l:63 #:1*/insert into EMPLOYEES (ID, LASTNAME, HIREDATE) values (?, ?, ?) {1: 3, 2: 'Tovar', 3: DATE '2012-12-30'};
04-25 07:29:47 jdbc[6]: 
/*SQL */COMMIT;
04-25 07:29:47 database: connecting session #7 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:47 jdbc[7]: 
/*SQL */SET TRACE_LEVEL_FILE 2;
04-25 07:29:47 jdbc[7]: 
/**/Connection conn7 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-25 07:29:47 jdbc[7]: 
/*SQL l:32 #:1*/delete from Employees where Id=? {1: 1};
04-25 07:29:47 jdbc[7]: 
/*SQL l:55*/select Id, LastName, HireDate from Employees where Id=? {1: 1};
04-25 07:29:47 jdbc[7]: 
/*SQL l:416 #:1 t:2*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TABLE_TYPE IN(?)) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: '%', 4: 'TABLE'};
04-25 07:29:47 jdbc[7]: 
/*SQL l:404 #:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TRUE) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: 'EMPLOYEES'};
04-25 07:29:47 jdbc[7]: 
/*SQL #:2*/delete from EMPLOYEES;
04-25 07:29:47 database: closing C:\Users\Snahider\workspace\DBTesting-Solucion\database\database from shutdown hook
04-25 07:29:47 database: disconnecting session #2
04-25 07:29:47 database: disconnected session #2
04-25 07:29:47 database: disconnecting session #3
04-25 07:29:47 database: disconnected session #3
04-25 07:29:47 database: disconnecting session #4
04-25 07:29:47 database: disconnected session #4
04-25 07:29:47 database: disconnecting session #5
04-25 07:29:47 database: disconnected session #5
04-25 07:29:47 database: disconnecting session #6
04-25 07:29:47 database: disconnected session #6
04-25 07:29:47 database: disconnecting session #7
04-25 07:29:47 database: disconnected session #7
04-25 07:29:47 database: closing C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:47 jdbc[2]: La conexión no fue cerrada por la aplicación y esta siendo limpiada (garbage collected)
The connection was not closed by the application and is garbage collected [90018-154]
java.lang.Exception: Stack Trace
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:125)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:98)
	at org.h2.Driver.connect(Driver.java:72)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1148)
	at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:106)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at testautomation.databasetesting.jdbc.EmployeeJDBCTest_ExternalDS_NukePave.loadData(EmployeeJDBCTest_ExternalDS_NukePave.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
04-25 07:29:47 jdbc[6]: La conexión no fue cerrada por la aplicación y esta siendo limpiada (garbage collected)
The connection was not closed by the application and is garbage collected [90018-154]
java.lang.Exception: Stack Trace
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:125)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:98)
	at org.h2.Driver.connect(Driver.java:72)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1148)
	at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:106)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at testautomation.databasetesting.jdbc.EmployeeJDBCTest_ExternalDS_NukePave.loadData(EmployeeJDBCTest_ExternalDS_NukePave.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
04-25 07:29:47 jdbc[5]: La conexión no fue cerrada por la aplicación y esta siendo limpiada (garbage collected)
The connection was not closed by the application and is garbage collected [90018-154]
java.lang.Exception: Stack Trace
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:125)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:98)
	at org.h2.Driver.connect(Driver.java:72)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1148)
	at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:106)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:382)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:456)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:464)
	at testautomation.databasetesting.jdbc.EmployeeJDBC.find(EmployeeJDBC.java:38)
	at testautomation.databasetesting.jdbc.EmployeeJDBCTest_ExternalDS_NukePave.find_withLastNameFilter_returnTheEmployeesWithTheExactLastName(EmployeeJDBCTest_ExternalDS_NukePave.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
04-25 07:29:47 jdbc[4]: La conexión no fue cerrada por la aplicación y esta siendo limpiada (garbage collected)
The connection was not closed by the application and is garbage collected [90018-154]
java.lang.Exception: Stack Trace
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:125)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:98)
	at org.h2.Driver.connect(Driver.java:72)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1148)
	at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:106)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at testautomation.databasetesting.jdbc.EmployeeJDBCTest_ExternalDS_NukePave.loadData(EmployeeJDBCTest_ExternalDS_NukePave.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
04-25 07:29:47 jdbc[3]: La conexión no fue cerrada por la aplicación y esta siendo limpiada (garbage collected)
The connection was not closed by the application and is garbage collected [90018-154]
java.lang.Exception: Stack Trace
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:125)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:98)
	at org.h2.Driver.connect(Driver.java:72)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1148)
	at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:106)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:575)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:849)
	at testautomation.databasetesting.jdbc.EmployeeJDBC.create(EmployeeJDBC.java:62)
	at testautomation.databasetesting.jdbc.EmployeeJDBCTest_ExternalDS_NukePave.create_theEmployeeIsPersisted(EmployeeJDBCTest_ExternalDS_NukePave.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
04-25 07:29:47 database: closed
04-25 07:29:57 database: opening C:\Users\Snahider\workspace\DBTesting-Solucion\database\database (build 154)
04-25 07:29:57 database: opened C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:57 database: connecting session #2 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:57 jdbc[2]: 
/*SQL */SET TRACE_LEVEL_FILE 2;
04-25 07:29:57 jdbc[2]: 
/**/Connection conn0 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-25 07:29:57 jdbc[2]: 
/*SQL */ROLLBACK;
04-25 07:29:57 database: disconnecting session #2
04-25 07:29:57 database: closing C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:58 database: closed
04-25 07:29:58 database: disconnected session #2
04-25 07:29:58 database: opening C:\Users\Snahider\workspace\DBTesting-Solucion\database\database (build 154)
04-25 07:29:58 database: opened C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:58 database: connecting session #2 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:58 jdbc[2]: 
/*SQL */SET TRACE_LEVEL_FILE 2;
04-25 07:29:58 jdbc[2]: 
/**/Connection conn2 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-25 07:29:58 jdbc[2]: 
/*SQL l:416 #:1 t:3*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TABLE_TYPE IN(?)) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: '%', 4: 'TABLE'};
04-25 07:29:58 jdbc[2]: 
/*SQL l:404 #:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TRUE) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: 'EMPLOYEES'};
04-25 07:29:58 jdbc[2]: 
/*SQL l:940 #:3 t:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN 'NO' ELSE 'YES' END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND COLUMN_NAME LIKE ? ESCAPE '\\' ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION {1: '%', 2: '%', 3: 'EMPLOYEES', 4: '%'};
04-25 07:29:58 jdbc[2]: 
/*SQL l:320 #:1 t:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, ORDINAL_POSITION KEY_SEQ, IFNULL(CONSTRAINT_NAME, INDEX_NAME) PK_NAME FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME = ? AND PRIMARY_KEY = TRUE ORDER BY COLUMN_NAME {1: '%', 2: '%', 3: 'EMPLOYEES'};
04-25 07:29:58 jdbc[2]: 
/*SQL l:63 #:1 t:1*/insert into EMPLOYEES (ID, LASTNAME, HIREDATE) values (?, ?, ?) {1: 1, 2: 'Pacheco', 3: DATE '2012-12-28'};
04-25 07:29:58 jdbc[2]: 
/*SQL l:63 #:1*/insert into EMPLOYEES (ID, LASTNAME, HIREDATE) values (?, ?, ?) {1: 2, 2: 'Quispe', 3: DATE '2012-12-29'};
04-25 07:29:58 jdbc[2]: 
/*SQL l:63 #:1*/insert into EMPLOYEES (ID, LASTNAME, HIREDATE) values (?, ?, ?) {1: 3, 2: 'Tovar', 3: DATE '2012-12-30'};
04-25 07:29:58 jdbc[2]: 
/*SQL */COMMIT;
04-25 07:29:59 database: connecting session #3 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:59 jdbc[3]: 
/*SQL */SET TRACE_LEVEL_FILE 2;
04-25 07:29:59 jdbc[3]: 
/**/Connection conn3 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-25 07:29:59 jdbc[3]: 
/*SQL l:32 #:1 t:2*/delete from Employees where Id=? {1: 1};
04-25 07:29:59 jdbc[3]: 
/*SQL l:55*/select Id, LastName, HireDate from Employees where Id=? {1: 1};
04-25 07:29:59 jdbc[3]: 
/*SQL l:416 #:1 t:2*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TABLE_TYPE IN(?)) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: '%', 4: 'TABLE'};
04-25 07:29:59 jdbc[3]: 
/*SQL l:404 #:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TRUE) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: 'EMPLOYEES'};
04-25 07:29:59 jdbc[3]: 
/*SQL #:2 t:1*/delete from EMPLOYEES;
04-25 07:29:59 database: connecting session #4 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:59 jdbc[4]: 
/*SQL */SET TRACE_LEVEL_FILE 2;
04-25 07:29:59 jdbc[4]: 
/**/Connection conn4 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-25 07:29:59 jdbc[4]: 
/*SQL l:416 #:1 t:2*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TABLE_TYPE IN(?)) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: '%', 4: 'TABLE'};
04-25 07:29:59 jdbc[4]: 
/*SQL l:404 #:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TRUE) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: 'EMPLOYEES'};
04-25 07:29:59 jdbc[4]: 
/*SQL l:940 #:3 t:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN 'NO' ELSE 'YES' END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND COLUMN_NAME LIKE ? ESCAPE '\\' ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION {1: '%', 2: '%', 3: 'EMPLOYEES', 4: '%'};
04-25 07:29:59 jdbc[4]: 
/*SQL l:320 #:1 t:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, ORDINAL_POSITION KEY_SEQ, IFNULL(CONSTRAINT_NAME, INDEX_NAME) PK_NAME FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME = ? AND PRIMARY_KEY = TRUE ORDER BY COLUMN_NAME {1: '%', 2: '%', 3: 'EMPLOYEES'};
04-25 07:29:59 jdbc[4]: 
/*SQL l:63 #:1*/insert into EMPLOYEES (ID, LASTNAME, HIREDATE) values (?, ?, ?) {1: 1, 2: 'Pacheco', 3: DATE '2012-12-28'};
04-25 07:29:59 jdbc[4]: 
/*SQL l:63 #:1*/insert into EMPLOYEES (ID, LASTNAME, HIREDATE) values (?, ?, ?) {1: 2, 2: 'Quispe', 3: DATE '2012-12-29'};
04-25 07:29:59 jdbc[4]: 
/*SQL l:63 #:1*/insert into EMPLOYEES (ID, LASTNAME, HIREDATE) values (?, ?, ?) {1: 3, 2: 'Tovar', 3: DATE '2012-12-30'};
04-25 07:29:59 jdbc[4]: 
/*SQL */COMMIT;
04-25 07:29:59 database: connecting session #5 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:59 jdbc[5]: 
/*SQL */SET TRACE_LEVEL_FILE 2;
04-25 07:29:59 jdbc[5]: 
/**/Connection conn5 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-25 07:29:59 jdbc[5]: 
/*SQL l:53 #:1 t:3*/insert into Employees(LastName,HireDate) values(?, ?) {1: 'Carranza', 2: DATE '2012-10-15'};
04-25 07:29:59 jdbc[5]: 
/*SQL #:1*/CALL SCOPE_IDENTITY();
04-25 07:29:59 jdbc[5]: 
/*SQL #:1*/CALL DATABASE();
04-25 07:29:59 jdbc[5]: 
/*SQL l:55 #:1*/select Id, LastName, HireDate from Employees where Id=? {1: 42};
04-25 07:29:59 jdbc[5]: 
/*SQL l:416 #:1 t:2*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TABLE_TYPE IN(?)) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: '%', 4: 'TABLE'};
04-25 07:29:59 jdbc[5]: 
/*SQL l:404 #:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TRUE) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: 'EMPLOYEES'};
04-25 07:29:59 jdbc[5]: 
/*SQL #:4 t:1*/delete from EMPLOYEES;
04-25 07:29:59 database: connecting session #6 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:59 jdbc[6]: 
/*SQL */SET TRACE_LEVEL_FILE 2;
04-25 07:29:59 jdbc[6]: 
/**/Connection conn6 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-25 07:29:59 jdbc[6]: 
/*SQL l:416 #:1 t:2*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TABLE_TYPE IN(?)) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: '%', 4: 'TABLE'};
04-25 07:29:59 jdbc[6]: 
/*SQL l:404 #:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TRUE) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: 'EMPLOYEES'};
04-25 07:29:59 jdbc[6]: 
/*SQL l:940 #:3 t:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE, TYPE_NAME, CHARACTER_MAXIMUM_LENGTH COLUMN_SIZE, CHARACTER_MAXIMUM_LENGTH BUFFER_LENGTH, NUMERIC_SCALE DECIMAL_DIGITS, NUMERIC_PRECISION_RADIX NUM_PREC_RADIX, NULLABLE, REMARKS, COLUMN_DEFAULT COLUMN_DEF, DATA_TYPE SQL_DATA_TYPE, ZERO() SQL_DATETIME_SUB, CHARACTER_OCTET_LENGTH CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE IS_NULLABLE, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATALOG, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_SCHEMA, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_TABLE, SOURCE_DATA_TYPE, CASE WHEN SEQUENCE_NAME IS NULL THEN 'NO' ELSE 'YES' END IS_AUTOINCREMENT, CAST(SOURCE_DATA_TYPE AS VARCHAR) SCOPE_CATLOG FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND COLUMN_NAME LIKE ? ESCAPE '\\' ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION {1: '%', 2: '%', 3: 'EMPLOYEES', 4: '%'};
04-25 07:29:59 jdbc[6]: 
/*SQL l:320 #:1 t:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, ORDINAL_POSITION KEY_SEQ, IFNULL(CONSTRAINT_NAME, INDEX_NAME) PK_NAME FROM INFORMATION_SCHEMA.INDEXES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME = ? AND PRIMARY_KEY = TRUE ORDER BY COLUMN_NAME {1: '%', 2: '%', 3: 'EMPLOYEES'};
04-25 07:29:59 jdbc[6]: 
/*SQL l:63 #:1*/insert into EMPLOYEES (ID, LASTNAME, HIREDATE) values (?, ?, ?) {1: 1, 2: 'Pacheco', 3: DATE '2012-12-28'};
04-25 07:29:59 jdbc[6]: 
/*SQL l:63 #:1*/insert into EMPLOYEES (ID, LASTNAME, HIREDATE) values (?, ?, ?) {1: 2, 2: 'Quispe', 3: DATE '2012-12-29'};
04-25 07:29:59 jdbc[6]: 
/*SQL l:63 #:1*/insert into EMPLOYEES (ID, LASTNAME, HIREDATE) values (?, ?, ?) {1: 3, 2: 'Tovar', 3: DATE '2012-12-30'};
04-25 07:29:59 jdbc[6]: 
/*SQL */COMMIT;
04-25 07:29:59 database: connecting session #7 to C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:59 jdbc[7]: 
/*SQL */SET TRACE_LEVEL_FILE 2;
04-25 07:29:59 jdbc[7]: 
/**/Connection conn7 = DriverManager.getConnection("jdbc:h2:database/database;TRACE_LEVEL_FILE=2", "SA", "");
04-25 07:29:59 jdbc[7]: 
/*SQL #:1*/select Id, LastName, HireDate from Employees where LastName='Pacheco';
04-25 07:29:59 jdbc[7]: 
/*SQL #:1*/CALL DATABASE();
04-25 07:29:59 jdbc[7]: 
/*SQL l:416 #:1 t:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TABLE_TYPE IN(?)) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: '%', 4: 'TABLE'};
04-25 07:29:59 jdbc[7]: 
/*SQL l:404 #:1*/SELECT TABLE_CATALOG TABLE_CAT, TABLE_SCHEMA TABLE_SCHEM, TABLE_NAME, TABLE_TYPE, REMARKS, TYPE_NAME TYPE_CAT, TYPE_NAME TYPE_SCHEM, TYPE_NAME, TYPE_NAME SELF_REFERENCING_COL_NAME, TYPE_NAME REF_GENERATION, SQL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_CATALOG LIKE ? ESCAPE '\\' AND TABLE_SCHEMA LIKE ? ESCAPE '\\' AND TABLE_NAME LIKE ? ESCAPE '\\' AND (TRUE) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME {1: '%', 2: '%', 3: 'EMPLOYEES'};
04-25 07:29:59 jdbc[7]: 
/*SQL #:3*/delete from EMPLOYEES;
04-25 07:29:59 database: closing C:\Users\Snahider\workspace\DBTesting-Solucion\database\database from shutdown hook
04-25 07:29:59 database: disconnecting session #2
04-25 07:29:59 database: disconnected session #2
04-25 07:29:59 database: disconnecting session #3
04-25 07:29:59 database: disconnected session #3
04-25 07:29:59 database: disconnecting session #4
04-25 07:29:59 database: disconnected session #4
04-25 07:29:59 database: disconnecting session #5
04-25 07:29:59 database: disconnected session #5
04-25 07:29:59 database: disconnecting session #6
04-25 07:29:59 database: disconnected session #6
04-25 07:29:59 database: disconnecting session #7
04-25 07:29:59 database: disconnected session #7
04-25 07:29:59 database: closing C:\Users\Snahider\workspace\DBTesting-Solucion\database\database
04-25 07:29:59 jdbc[3]: La conexión no fue cerrada por la aplicación y esta siendo limpiada (garbage collected)
The connection was not closed by the application and is garbage collected [90018-154]
java.lang.Exception: Stack Trace
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:125)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:98)
	at org.h2.Driver.connect(Driver.java:72)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1148)
	at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:106)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:575)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:818)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:874)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:882)
	at testautomation.databasetesting.jdbc.EmployeeJDBC.delete(EmployeeJDBC.java:67)
	at testautomation.databasetesting.jdbc.EmployeeJDBCTest_ExternalDS_NukePave.delete_theEmployeeIsDeleted(EmployeeJDBCTest_ExternalDS_NukePave.java:80)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
04-25 07:29:59 jdbc[6]: La conexión no fue cerrada por la aplicación y esta siendo limpiada (garbage collected)
The connection was not closed by the application and is garbage collected [90018-154]
java.lang.Exception: Stack Trace
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:125)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:98)
	at org.h2.Driver.connect(Driver.java:72)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1148)
	at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:106)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at testautomation.databasetesting.jdbc.EmployeeJDBCTest_ExternalDS_NukePave.loadData(EmployeeJDBCTest_ExternalDS_NukePave.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
04-25 07:29:59 jdbc[5]: La conexión no fue cerrada por la aplicación y esta siendo limpiada (garbage collected)
The connection was not closed by the application and is garbage collected [90018-154]
java.lang.Exception: Stack Trace
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:125)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:98)
	at org.h2.Driver.connect(Driver.java:72)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1148)
	at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:106)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:575)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:849)
	at testautomation.databasetesting.jdbc.EmployeeJDBC.create(EmployeeJDBC.java:62)
	at testautomation.databasetesting.jdbc.EmployeeJDBCTest_ExternalDS_NukePave.create_theEmployeeIsPersisted(EmployeeJDBCTest_ExternalDS_NukePave.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
04-25 07:29:59 jdbc[4]: La conexión no fue cerrada por la aplicación y esta siendo limpiada (garbage collected)
The connection was not closed by the application and is garbage collected [90018-154]
java.lang.Exception: Stack Trace
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:125)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:98)
	at org.h2.Driver.connect(Driver.java:72)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1148)
	at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:106)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at testautomation.databasetesting.jdbc.EmployeeJDBCTest_ExternalDS_NukePave.loadData(EmployeeJDBCTest_ExternalDS_NukePave.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
04-25 07:29:59 jdbc[2]: La conexión no fue cerrada por la aplicación y esta siendo limpiada (garbage collected)
The connection was not closed by the application and is garbage collected [90018-154]
java.lang.Exception: Stack Trace
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:125)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:98)
	at org.h2.Driver.connect(Driver.java:72)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1148)
	at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:106)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at testautomation.databasetesting.jdbc.EmployeeJDBCTest_ExternalDS_NukePave.loadData(EmployeeJDBCTest_ExternalDS_NukePave.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
04-25 07:29:59 database: closed
